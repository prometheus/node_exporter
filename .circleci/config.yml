---
version: 2.1

orbs:
  prometheus: prometheus/prometheus@0.1.0

executors:
  # Whenever the Go version is updated here, .promu.yml should
  # also be updated.
  golang:
    docker:
    - image: circleci/golang:1.13

jobs:
  test:
    environment:
      GOVERSION: 1.13.8
    machine:
      enabled: true

    steps:
    - checkout
    - run:
        name: install go
        command: |
          sudo rm -rf /usr/local/go
          wget https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go${GOVERSION}.linux-amd64.tar.gz
          rm -f go${GOVERSION}.linux-amd64.tar.gz
    - run: make
    - prometheus/store_artifact:
        file: node_exporter

  codespell:
    docker:
    - image: circleci/python

    steps:
    - checkout
    - run: sudo pip install codespell
    - run: codespell --skip=".git,./vendor,ttar,go.mod,go.sum,*pem" -L uint,packages\',uptodate

  build:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      GOVERSION: 1.13.8
      DOCKER_TEST_IMAGE_NAME: quay.io/prometheus/golang-builder:1.13-base
      REPO_PATH: github.com/prometheus/node_exporter
      OSXCROSS_PATH: /usr/osxcross
      OSXCROSS_REV: 3034f7149716d815bc473d0a7b35d17e4cf175aa
      SDK_VERSION: 10.11
      DARWIN_VERSION: 15
      OSX_VERSION_MIN: 10.6
      OSXCROSS_SDK_URL: https://www.dropbox.com/s/bwlbtwywvlu1au7/MacOSX10.11.sdk.tar.xz

    steps:
    - checkout
    - run:
        name: install go
        command: |
          sudo rm -rf /usr/local/go
          wget https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go${GOVERSION}.linux-amd64.tar.gz
          rm -f go${GOVERSION}.linux-amd64.tar.gz
    - run:
        name: install  build requirements
        command: |
          dpkg --add-architecture i386 \
          && apt-get update && apt-get install -y --no-install-recommends \
              clang \
              g++ \
              gcc \
              gcc-multilib \
              libc6-dev \
              libc6-dev-i386 \
              linux-libc-dev:i386 \
              mingw-w64 \
              patch \
              xz-utils

          mkdir -p /tmp/osxcross && cd /tmp/osxcross \
          && curl -sSL "https://codeload.github.com/tpoechtrager/osxcross/tar.gz/${OSXCROSS_REV}" \
              | tar -C /tmp/osxcross --strip=1 -xzf - \
          && curl -sSLo tarballs/MacOSX${SDK_VERSION}.sdk.tar.xz ${OSXCROSS_SDK_URL} \
          && UNATTENDED=yes ./build.sh >/dev/null \
          && mv target "${OSXCROSS_PATH}" \
          && rm -rf /tmp/osxcross "/usr/osxcross/SDK/MacOSX${SDK_VERSION}.sdk/usr/share/man"

          echo "export PATH='$OSXCROSS_PATH/bin:$PATH'" >> $BASH_ENV
    - run: make promu
    - run: promu crossbuild
    - run: promu --config .promu-cgo.yml crossbuild
    - persist_to_workspace:
        root: .
        paths:
        - .build
    - store_artifacts:
        path: .build
        destination: /build
    - run:
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG
          else
            make docker
          fi
    - run: docker images
    - run: docker run --rm -t -v "$(pwd):/app" "${DOCKER_TEST_IMAGE_NAME}" -i "${REPO_PATH}" -T
    - run:
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            make test-docker DOCKER_IMAGE_TAG=$CIRCLE_TAG
          else
            make test-docker
          fi

workflows:
  version: 2
  node_exporter:
    jobs:
    - test:
        filters:
          tags:
            only: /.*/
    - build:
        filters:
          tags:
            only: /.*/
    - codespell:
        filters:
          tags:
            only: /.*/
    - prometheus/publish_master:
        context: org-context
        requires:
        - test
        - build
        filters:
          branches:
            only: master
    - prometheus/publish_release:
        context: org-context
        requires:
        - test
        - build
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
